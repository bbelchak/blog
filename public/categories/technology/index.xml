<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Technology on belchak.com</title>
    <link>https://belchak.com/categories/technology/</link>
    <description>Recent content in Technology on belchak.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 21 Jan 2012 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://belchak.com/categories/technology/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>jira and campfire integration</title>
      <link>https://belchak.com/post/2012/01/21/jira-and-campfire-integration/</link>
      <pubDate>Sat, 21 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://belchak.com/post/2012/01/21/jira-and-campfire-integration/</guid>
      <description>I have been working on migrating my company&amp;rsquo;s Pivotal Tracker to JIRA. We love most of the features of JIRA, but we were really missing the nice updates to our Campfire room to tell us what is going on with our issues.
Sure, we could use an RSS feed plugin for Campy, but that is not real-time enough.
I didn&amp;rsquo;t want to write a huge plugin just to send messages to Campfire (it seems like such a simple thing to do!</description>
    </item>
    
    <item>
      <title>re enabling key repeat in osx lion</title>
      <link>https://belchak.com/post/2011/07/23/re-enabling-key-repeat-in-osx-lion/</link>
      <pubDate>Sat, 23 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://belchak.com/post/2011/07/23/re-enabling-key-repeat-in-osx-lion/</guid>
      <description>I have recently upgraded to OSX Lion, and I have to say that I love everything about it. Except for one thing. In many apps, the key repeat has been disabled in favor of the new press-and-hold popup for getting alternative characters.
This is fine for most apps, but for apps like PyCharm where I use vi key maps, it becomes very, very frustrating.
I came across this little tip to re-enable the key repeat, and my life is measurably better (first world problems, I know&amp;hellip;).</description>
    </item>
    
    <item>
      <title>unit testing django with a nosql backend</title>
      <link>https://belchak.com/post/2011/02/07/unit-testing-django-with-a-nosql-backend/</link>
      <pubDate>Mon, 07 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://belchak.com/post/2011/02/07/unit-testing-django-with-a-nosql-backend/</guid>
      <description>In my previous post about unit testing for django, I laid the groundwork for how to unit test any django application. One nice feature that django includes with its test framework is the test database syncing. Even better is if you are using South to do database migrations - it will run the migrations in your test environment for you.
However, what if you are using a NoSQL database backend like MongoDB, Cassandra, CouchDB or something similar and you aren&amp;rsquo;t using the Django ORM?</description>
    </item>
    
    <item>
      <title>unit testing your django application</title>
      <link>https://belchak.com/post/2011/02/05/unit-testing-your-django-application/</link>
      <pubDate>Sat, 05 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://belchak.com/post/2011/02/05/unit-testing-your-django-application/</guid>
      <description>Unit testing is a very important part of any software project. It helps you know that the new code you are deploying works, and isn&amp;rsquo;t going to blow up in your face. It also helps you feel good about changing large chunks of code without destroying everything you&amp;rsquo;ve done for the last 3 years.
Unit testing with django is as simple as pie. The documentation is very good, and you can learn a lot about more advanced testing methods from the python documentation.</description>
    </item>
    
    <item>
      <title>code completion for python and django in vim</title>
      <link>https://belchak.com/post/2011/01/31/code-completion-for-python-and-django-in-vim/</link>
      <pubDate>Mon, 31 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://belchak.com/post/2011/01/31/code-completion-for-python-and-django-in-vim/</guid>
      <description>VIM has been my editor of choice for at least 15 years. I love how fast I can edit files, perform menial tasks, and wreak general havoc on any code project I am working on at any given moment. One of the things that I have missed about VIM from an IDE perspective has been code completion (a.k.a. &amp;ldquo;IntelliSense&amp;rdquo;). I have spent a lot of time on websites and man pages trying to figure out syntax and function names for several types of languages, and just recently discovered a long-included feature of VIM called omni completion, or Omnicomplete.</description>
    </item>
    
    <item>
      <title>django database migrations with south</title>
      <link>https://belchak.com/post/2011/01/27/django-database-migrations-with-south/</link>
      <pubDate>Thu, 27 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://belchak.com/post/2011/01/27/django-database-migrations-with-south/</guid>
      <description>I have been using django for web development for almost a year now, and I just recently started using South to do database migrations. To be fair, most of the work that I have been doing with databases has centered around MongoDB and schema-less document stores instead of a traditional RDBMS. Since Django does not come with any database migration tools, my standard approach was to make sure that my models are completely thought out before running the manage.</description>
    </item>
    
    <item>
      <title>removing old ssh fingerprints from your known_hosts the quick and easy way</title>
      <link>https://belchak.com/post/2011/01/27/removing-old-ssh-fingerprints-from-your-known_hosts-the-quick-and-easy-way/</link>
      <pubDate>Thu, 27 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://belchak.com/post/2011/01/27/removing-old-ssh-fingerprints-from-your-known_hosts-the-quick-and-easy-way/</guid>
      <description>Ever have this problem? You just rebuilt a machine, and when you go to SSH into it, you get the following message:
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @ WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED! @ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!  Many people just go edit their ~/.ssh/known_hosts file and carry on. But there is a faster/better way!
OpenSSH comes with a command called ssh-keygen that allows you to generate and manage all your keys, including your ssh fingerprints.</description>
    </item>
    
    <item>
      <title>automatic mongodb backups to s3</title>
      <link>https://belchak.com/post/2011/01/20/automatic-mongodb-backups-to-s3/</link>
      <pubDate>Thu, 20 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://belchak.com/post/2011/01/20/automatic-mongodb-backups-to-s3/</guid>
      <description>One of the big problems with hosting your own database solution is that you have to do backups for it on a regular basis. Not only do you need to do backups for it, but you need to also keep backups offsite. Luckily, Amazon S3 allows a cheap and easy solution for your offsite backups.
I found a shell script solution for handling MongoDB backups, but it only does local backups.</description>
    </item>
    
    <item>
      <title>problems with facebook api and m2crypto</title>
      <link>https://belchak.com/post/2011/01/19/problems-with-facebook-api-and-m2crypto/</link>
      <pubDate>Wed, 19 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://belchak.com/post/2011/01/19/problems-with-facebook-api-and-m2crypto/</guid>
      <description>After doing some crypto updates to a django application that I am working on, I discovered that the Facebook API was dog slow for retrieving any query using HTTPS. Turns out that the M2Crypto library apparently hijacks the SSL processing of urllib and mucks everything up. Thanks to this handy blog post, I was able to fix my Python implementation of the Facebook API and get things speeding along again.</description>
    </item>
    
  </channel>
</rss>